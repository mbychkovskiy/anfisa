apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.name" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mysql.name" . }}
  template:
    metadata:
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "mysql.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--default-authentication-plugin=mysql_native_password"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: "{{ .Values.env.1env }}"
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.env.1env.secretname }}"
                key: "{{ .Values.env.1env.key }}"
          - name: "{{ .Values.env.2env }}"
            value: "{{ .Values.env.2env.value }}"
          - name: "{{ .Values.env.3env }}"
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.env.3env.secretname }}"
                key: "{{ .Values.env.3env.key }}"
          - name: "{{ .Values.env.4env }}"
            value: "{{ .Values.env.4env.value }}"

#          volumeMounts:
#            - name: data
#              mountPath: /opt

          ports:
          - name: mysql
            containerPort: {{ .Values.service.port }}
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
